{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","style","color","React","Component","Navigation","Detail","location","history","undefined","push","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"2SAeeA,MAZf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,mBAAf,UACI,sIAGA,6D,gFC6BGC,MAlCf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACE,qBAAKN,UAAU,QAAf,SACE,eAAC,IAAD,CACEO,GAAI,CACFC,SAAU,gBACVC,MAAO,CAAEN,OAAMD,QAAOE,UAASC,SAAQC,WAH3C,UAMA,qBAAKI,IAAKL,EAAQM,IAAKT,EAAOA,MAAOA,IACrC,sBAAKF,UAAU,cAAf,UACA,oBAAIA,UAAU,eAAd,SAA8BE,IAC9B,oBAAIF,UAAU,cAAd,SAA6BG,IACrB,oBAAIH,UAAU,gBAAd,SACKM,EAAOM,KAAI,SAACC,EAAOC,GAChB,OAAO,oBAAgBd,UAAU,eAA1B,SAA0Ca,GAAjCC,QAG5B,oBAAGd,UAAU,iBAAb,UAA+BI,EAAQW,MAAM,EAAE,KAA/C,mBClBNC,G,kNACJP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAQZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAXzB,2C,uDAcZ,WAGEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKhB,MAA3BQ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASlB,UAAU,YAAnB,SACGiB,EACC,qBAAKjB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,sBAAKA,UAAU,SAAf,UACGkB,EAAON,KAAI,SAACc,GAAD,OACV,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZD,MAAOwB,EAAMxB,MACbE,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,QANToB,EAAMC,OASb,oBAAIE,MAAO,CAAEC,MAAO,OAApB,mC,GAhDKC,IAAMC,YAwDVhB,IChDAiB,G,MATI,WACf,OACI,sBAAKjC,UAAU,MAAf,UACI,cAAC,IAAD,CAAMO,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,wBCNN2B,E,uKACJ,WACE,MAA8BT,KAAK5B,MAA3BsC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACKC,IAAnBF,EAAS1B,OACX2B,EAAQE,KAAK,O,oBAIf,WACI,IAAQH,EAAaV,KAAK5B,MAAlBsC,SACR,OAAIA,EAAS1B,MACF,+BAAO0B,EAAS1B,MAAMP,QAEtB,S,GAbE6B,IAAMC,WAkBZE,ICDAK,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWzB,EAAM0B,OAAO,IAF1C,IAGE,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAW7C,IAChC,cAAC,IAAD,CAAO4C,KAAK,gBAAgBC,UAAWP,QCV7CS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6e4330d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './About.css'\r\n\r\nfunction About(props) {\r\n    console.log(props);\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                \"Freedom is the freedom to say that two plus two make four. If that is granted, all else follows.\"\r\n            </span>\r\n            <span>- George Orwell, 1984</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Movie({ title, year, summary, poster, genres }) {\r\n    return (\r\n      <div className=\"movie\">\r\n        <Link\r\n          to={{\r\n            pathname: '/movie-detail',\r\n            state: { year, title, summary, poster, genres },\r\n          }}\r\n        >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {genres.map((genre, index) => {\r\n                        return <li key={index} className=\"movie__genre\">{genre}</li>;\r\n                    })}                \r\n                </ul>\r\n            <p className=\"movie__summary\">{summary.slice(0,180)}....</p>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    );\r\n}//\r\n\r\nMovie.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true, // this.state\r\n    movies: [],\r\n  };\r\n  // async는 자바스크립트에게 getMovies() 함수는 시간이 필요하고\r\n  // async는 JS에게 getMovies() 함수가 비동기라고 말해주는 것. JS에게 getMovies() 함수는 비동기라서 기다려야 해라고 말한거라고 생각하면 됨\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies }, // 여기 movies는 axios.get()의 결과를 담을 변수이고, 위 state에 있는 movies는 변수가 아닌 state다. 엄연히 다른것이니 혼동하지 말자\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    ); // await.get()의 실행을 기다려달라고 말해주는 것\r\n    // await은 JS에게 getMovies() 함수 내부의 axios.get()의 실행 완료를 기다렸다가 끝나면 계속 진행하라고 말한 것\r\n    // 여기서 중요한 내용은 API에서 데이터를 받아오는 axios.get()을 실행하려면 시간이 필요하고, 그 사실을 JS에게 알려야만 데이터를 잡을수 있으므로 async, await을 사용 했다는 것\r\n    // async와 await은 짝꿍이다 그래서 둘은 동시에 사용해야만 한다!!!!\r\n    this.setState({ movies, isLoading: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // App 컴포넌트가 그려지면(render() 함수가 실행되면) 호출되는 생명주기 함수는 componentDidMount() 함수다\r\n    // 영화 데이터 로딩! (영화 데이터 로딩이 완료되면 이란뜻)\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie //여기서 Movie 컴포넌트를 반환한다\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n              <h1 style={{ color: 'red'}}>확인</h1>\r\n          </div>\r\n        )}\r\n      </section>\r\n    ); //구조 분해 할당으로 this.state(현재 스테이트(상태)에 있는 isLoading을 우선 얻으면 항상 this.state를 입력하지 않아도 됨)\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n    render() {\r\n        const { location } = this.props;\r\n        if (location.state) {\r\n            return <span>{location.state.title}</span>;\r\n        } else {\r\n            return null;\r\n    }\r\n  }\r\n}//\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport About from './routes/About';\r\nimport Home from './routes/Home';\r\nimport Navigation from \"./components/Navigation\";\r\nimport Detail from \"./routes/Detail\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Route path=\"/\" component={Home} exact={true} /> {/* exact props는 Route 컴포넌트가 path props가 정확하게 일치하는 URL에만 반응한다 */}\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/movie-detail\" component={Detail} />\r\n    </HashRouter>\r\n  );\r\n}//\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}